name: Node.js CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgresql:
        image: bitnami/postgresql:16
        env:
          POSTGRESQL_USERNAME: bdr
          POSTGRESQL_PASSWORD: bdr
          POSTGRESQL_DATABASE: bdr
          POSTGRESQL_POSTGRES_PASSWORD: root
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s
          --health-timeout=5s --health-retries=10
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Clone the secondary repository
        run:
          git clone
          https://github.com/PDG-GR9-Gestion-Decheterie/Gestion-Decheterie-Infra.git
          repo-temp

      - name: Move the db folder to the correct location
        run: mv repo-temp/release/db ./db

      - name: Clean up
        run: rm -rf repo-temp

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Build Docker image for backend
        run: |
          docker build -t backend-image:latest ./backend

      - name: Run backend as a service
        run: |
          docker run -d --name backend-container backend-image:latest

      - name: Wait for Postgres to be ready
        run: |
          while ! pg_isready -h localhost -p 5432 -U bdr; do
            echo "Waiting for postgres..."
            sleep 2
          done

      - name: Initialize Database
        run: |
          psql -h localhost -U bdr -d bdr -f ./db/GestionDecheterie.sql
        env:
          PGPASSWORD: bdr

      - name: List tables
        run: |
          psql -h localhost -U bdr -d bdr -c "\dt gestion_decheterie.*"
        env:
          PGPASSWORD: bdr

      - name: List content of the employe table
        run: |
          psql -h localhost -U bdr -d bdr -c "SELECT * FROM gestion_decheterie.employe;"
        env:
          PGPASSWORD: bdr

      - name: Capture backend logs
        run: docker logs backend-container

      - name: Run tests
        run: docker exec backend-container npm test
